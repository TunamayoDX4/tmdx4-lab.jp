/* 共用ライブラリの実装 */
:root {
  --window-bg-color: #CCCCCC;
  --window-border-color: #FFFFFF;
  --window-header-color: #000099;
  --window-header-font-color: #FFFFFF;
  --button-bg-color: var(--window-bg-color);
  --button-border-color: var(--window-border-color);
  --button-bg-color-hov: lch(from var(--button-bg-color) calc(l + 10) c h);
  --button-border-color-hov: lch(from var(--button-border-color) calc(l + 10) c h);
  --button-bg-color-act: lch(from var(--button-bg-color) calc(l - 10) c h);
  --button-border-color-act: lch(from var(--button-border-color) calc(l - 10) c h);
  --input-text-bg-color: #FFFFFF;
  --font-color: #000000;
}

/* Win98風列方向UI汎用ライブラリ */
.row-ui {
  display: flex;
  flex-flow: row;
  align-items: center;

  & hr {
    height: 100%;
  }

  & hr.sep-thick {
    border: outset 2px var(--window-border-color);
    margin-inline: 2px;
  }

  & hr.sep-thin {
    border-left: groove 2px var(--window-border-color);
    margin-inline: 1px; 
  }
}

/* Win98風のバースタイルのUI */
.ui-bar {
  position: sticky;
  padding: 1px;
  z-index: 1000;
  display: flex;
  flex-flow: row;
  background-color: var(--window-bg-color);
  border: 1px outset var(--window-border-color);
  border-top: 2px outset var(--window-border-color);

  & > :first-child {
    flex: 0 0 auto;
  }
  & > :nth-child(2) {
    flex: 1;
  }
  & > :last-child {
    flex: 0 0 auto;
  }
  & > * {
    display: flex;
    flex-flow: row;
  }
}

/* Win98風ウィンドウ */
.ui-window {
  position: absolute;
  padding: 1px;
  z-index: 1000;
  display: flex;
  flex-flow: column;
  background-color: var(--window-bg-color);
  border: 2px outset var(--window-border-color);

  & > * {
    width: 100%;
  }
  & > main {
    flex: 1 1 0;
    overflow: hidden;
    display: flex;
    flex-flow: row;
    & .window-graphic-obj {
      width: 100%;
      height: 100%;
      overflow: auto;
      border: 1px inset var(--window-border-color);
    }
    & hr {
      border-bottom: 2px groove var(--window-border-color);
    }
  }
  & > header {
    flex: 0;
    padding-bottom: 2px;
    & > .window-header-line {
      background-color: var(--window-header-color);
      padding: 1px;
      margin-bottom: 1px;
      display: flex;
      flex-flow: row;
      align-items: center;
      align-content: center;
      & hr {
        margin-inline: 2px;
      }
      & > * {
        height: 100%;
        display: flex;
        flex-flow: row;
        align-items: center;
        align-content: center;
      }
      & > .window-hl-left {
        margin-right: auto;
      }
      & > .window-hl-right {
        margin-left: auto;
      }
      & > * > * {
        padding-inline: 1px;
      }
      & .ctx-button {
        display: flex;
        flex-flow: row;
        & .button-array {
          display: flex;
          flex-flow: row;
        }
        & .common-button {
          margin-inline: 1px;
          width: 1.25rem;
          height: 1rem;
          :is(&, & > *) {
            font-size: small;
            font-weight: bolder;
          }
        }
        & fieldset {
          display: flex;
          flex-flow: row;
          margin-inline: 1px;
          & > .common-button {
            margin: 0;
          }
        }
      }
      .window-title {
        font-size: 1rem;
        color: var(--window-header-font-color);
      }
      .window-title-icon {
        height: 1rem;
      }
    }
    & > .window-header-menu {
      display: flex;
      flex-flow: row;
      border: inset 1px var(--window-border-color);
      font-size: small;
      & > * {
        border: outset 1px var(--window-border-color);
        display: flex;
        flex-flow: row;
        > .common-button {
          padding-inline: 1rem;
          height: 100%;
          vertical-align:middle;
        }
      }
      & > :first-child {
        flex: 1;
      }
      & > .window-header-right-logo {
        height: 1.5rem;
        width: 2.5rem;
        background-color: black;
        display: flex;
        flex-flow: row;
        justify-content: center;
        align-items: center;
        align-content: center;
        & > .window-header-right-logo-icon {
          height: 1rem;
        }
      }
    }
  }
  & > footer {
    flex: 0;
    display: flex;
    flex-flow: row;
    justify-content: center;
    align-items: center;
    align-content: center;
  }
}

/* ボタンクロージャ */
.cb-closure {
  z-index: 100;
  width: 100%;
  height: 100%;
  position: fixed;
  background-color: transparent;
  display: none;
}

/* 汎用テキストインプット */
.common-text-input {
  --border-thickness: 2px;
  padding-inline: 2px;
  background-color: var(--input-text-bg-color);
  border: inset var(--border-thickness) var(--window-border-color);
}

/* 汎用ボタン */
.common-button {
  z-index: 50;
  display: flex;
  justify-content: center;
  align-items: center;
  width: fit-content;
  height: fit-content;
  text-align: center;
  background-color: var(--button-bg-color);
  --border-thickness: 2px;
  
  border: var(--border-thickness) solid transparent;
  &:not(.flat-type) {
    border: var(--border-thickness) outset var(--button-border-color);
  }
  &:hover {
    &:not(.flat-type) {
      background-color: var(--button-bg-color-hov);
    }
    border: var(--border-thickness) outset var(--button-border-color-hov);
  }
  &:is(
    :not(.hidden-checked-active):has(> input:is([type="checkbox"],[type="radio"]):checked),
    :active
  ) {
    background-color: var(--button-bg-color-act);
    border: var(--border-thickness) inset var(--button-border-color-act);
  }
  & > input:is([type="checkbox"],[type="radio"],[type="button"],[type="submit"]) {
    display: none;
    appearance: none;
  }

  /* ボタンが無効のとき、有効時に表示するボタン内容の処理 */
  &:not(:is(
    :has(> input:is([type="checkbox"],[type="radio"]):checked),
    :active
  )) > .with-enable {
    display: none;
  }

  /* ボタンが有効のとき、有効時は非表示にするボタン内容の処理 */
  &:is(
    :has(> input:is([type="checkbox"],[type="radio"]):checked),
    :active
  ) > .with-disable {
    display: none;
  }
  :is(&,& > *) {
    white-space: unset;
    user-select: none;
    color: var(--font-color);
  }
}

/* 汎用プルダウン */
.common-pulldown {
  position: relative;
  --list-border-thickness: 2px;
  --shift: calc(100%/2 + 0.5rem + var(--border-thickness));
  & > :is(ul,ol) {
    z-index: 50;
    position:absolute;
    display: none;
    min-width: 100%;
    background-color: var(--window-bg-color);
    border: outset var(--list-border-thickness) var(--window-border-color);
    top: calc(var(--shift) + var(--list-border-thickness));
    & > li {
      display: block;
      width: 100%;
      white-space: nowrap;
      & > label {
        width: 100%;
      }
    }
  }
  & > ul > li {
    list-style: none;
  }
  &:is(
    :active,
    :has(:is(
      ul:hover, 
      & > input:is([type="checkbox"],[type=radio]):checked)
    )
  ) {
    & > :is(ul, ol) {
      &:before {
        content: "";
        width: 100%;
        top: -100%;
        height: 100%;
        position: absolute;
        display: block;
        background-color: transparent;
      }
      display: block;
    }
  }
}